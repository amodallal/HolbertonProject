{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ai-Finetuning\\\\gemini-ui\\\\src\\\\GeminiChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeminiChatBox = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const GEMINI_API_KEY = 'AIzaSyD0ZQiR56gas1Kxnq_fEwv3Ku9M_KH4Zo8'; // Replace this\n  const GEMINI_ENDPOINT = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyD0ZQiR56gas1Kxnq_fEwv3Ku9M_KH4Zo8';\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const newMessages = [...messages, userMessage];\n    setMessages(newMessages);\n    setInput('');\n    setLoading(true);\n    try {\n      var _data$candidates, _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n      const response = await fetch(`${GEMINI_ENDPOINT}?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            role: 'user',\n            parts: [{\n              text: input\n            }]\n          }]\n        })\n      });\n      const data = await response.json();\n      console.log('Gemini response:', data);\n      const reply = (data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text) || 'No response from Gemini.';\n      setMessages([...newMessages, {\n        role: 'assistant',\n        content: reply\n      }]);\n    } catch (error) {\n      setMessages([...newMessages, {\n        role: 'assistant',\n        content: 'Error: ' + error.message\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border rounded p-4 h-96 overflow-y-scroll mb-4 bg-white shadow\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.role === 'user' ? 'text-right' : 'text-left'}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block px-3 py-2 rounded ${msg.role === 'user' ? 'bg-blue-200' : 'bg-gray-200'}`,\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 3\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Gemini is thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 border rounded p-2\",\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(GeminiChatBox, \"OXuvJDAbcY1ln4be0+GCNCi4LO8=\");\n_c = GeminiChatBox;\nexport default GeminiChatBox;\nvar _c;\n$RefreshReg$(_c, \"GeminiChatBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GeminiChatBox","_s","input","setInput","messages","setMessages","loading","setLoading","GEMINI_API_KEY","GEMINI_ENDPOINT","sendMessage","trim","userMessage","role","content","newMessages","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","data","json","console","log","reply","candidates","error","message","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["D:/Ai-Finetuning/gemini-ui/src/GeminiChatBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst GeminiChatBox = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const GEMINI_API_KEY = 'AIzaSyD0ZQiR56gas1Kxnq_fEwv3Ku9M_KH4Zo8'; // Replace this\n  const GEMINI_ENDPOINT = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyD0ZQiR56gas1Kxnq_fEwv3Ku9M_KH4Zo8';\n\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input };\n    const newMessages = [...messages, userMessage];\n    setMessages(newMessages);\n    setInput('');\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${GEMINI_ENDPOINT}?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          contents: [{ role: 'user', parts: [{ text: input }] }]\n        })\n      });\n\n      const data = await response.json();\n      console.log('Gemini response:', data);\n      const reply = data?.candidates?.[0]?.content?.parts?.[0]?.text || 'No response from Gemini.';\n\n      setMessages([...newMessages, { role: 'assistant', content: reply }]);\n    } catch (error) {\n      setMessages([...newMessages, { role: 'assistant', content: 'Error: ' + error.message }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto\">\n      <div className=\"border rounded p-4 h-96 overflow-y-scroll mb-4 bg-white shadow\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`mb-2 ${msg.role === 'user' ? 'text-right' : 'text-left'}`}>\n  <span className={`inline-block px-3 py-2 rounded ${msg.role === 'user' ? 'bg-blue-200' : 'bg-gray-200'}`}>\n    {msg.content}\n  </span>\n</div>\n        ))}\n        {loading && <p className=\"text-gray-500\">Gemini is thinking...</p>}\n      </div>\n      <div className=\"flex gap-2\">\n        <input\n          className=\"flex-1 border rounded p-2\"\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n        />\n        <button\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          onClick={sendMessage}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GeminiChatBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}